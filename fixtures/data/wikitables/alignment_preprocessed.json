[
  [
    "what was the last year where this team was a part of the usl a-league?",
    [
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))",
      "((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.league fb:cell.usl_a_league))))))",
      "((reverse fb:cell.cell.date) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x ((reverse fb:cell.cell.date) (var x))))))",
      "((reverse fb:cell.cell.date) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x ((reverse fb:cell.cell.number) (var x))))))",
      "((reverse fb:cell.cell.date) (fb:cell.cell.date (max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))))))",
      "((reverse fb:cell.cell.date) (fb:cell.cell.number (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))))))",
      "((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.league fb:cell.usl_a_league))))))",
      "((reverse fb:cell.cell.number) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x ((reverse fb:cell.cell.date) (var x))))))",
      "((reverse fb:cell.cell.number) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x ((reverse fb:cell.cell.number) (var x))))))",
      "((reverse fb:cell.cell.number) (fb:cell.cell.date (max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))))))",
      "((reverse fb:cell.cell.number) (fb:cell.cell.number (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.avg_attendance ((reverse fb:row.row.avg_attendance) (fb:row.row.league fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.index ((reverse fb:row.row.index) (fb:row.row.league fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league ((reverse fb:row.row.league) (fb:row.row.league fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league (and (!= fb:cell.3rd_usl_3rd) fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league (and (!= fb:cell.usl_first_division) fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league (and (!= fb:cell.ussf_d_2_pro_league) fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league (and ((reverse fb:row.row.league) (fb:type.object.type fb:type.row)) fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.year ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.date) (and (!= fb:cell.3rd_usl_3rd) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) (and (!= fb:cell.usl_a_league) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) (and (!= fb:cell.usl_first_division) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) (and (!= fb:cell.ussf_d_2_pro_league) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) (and ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) ((reverse fb:row.row.year) (fb:type.object.type fb:type.row)))))",
      "(max ((reverse fb:cell.cell.date) (fb:cell.cell.date ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.date) (fb:cell.cell.number ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.avg_attendance ((reverse fb:row.row.avg_attendance) (fb:row.row.league fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.index ((reverse fb:row.row.index) (fb:row.row.league fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league ((reverse fb:row.row.league) (fb:row.row.league fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league (and (!= fb:cell.3rd_usl_3rd) fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league (and (!= fb:cell.usl_first_division) fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league (and (!= fb:cell.ussf_d_2_pro_league) fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league (and ((reverse fb:row.row.league) (fb:type.object.type fb:type.row)) fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.year ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.number) (and (!= fb:cell.3rd_usl_3rd) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) (and (!= fb:cell.usl_a_league) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) (and (!= fb:cell.usl_first_division) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) (and (!= fb:cell.ussf_d_2_pro_league) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) (and ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) ((reverse fb:row.row.year) (fb:type.object.type fb:type.row)))))",
      "(max ((reverse fb:cell.cell.number) (fb:cell.cell.date ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.number) (fb:cell.cell.number ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))))))",
      "((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)) (reverse (lambda x ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (var x))))))))",
      "((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (var x))))))))",
      "((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x ((reverse fb:row.row.index) (fb:row.row.next (var x))))))))",
      "((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x (avg ((reverse fb:row.row.index) (var x))))))))",
      "((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x (max ((reverse fb:row.row.index) (var x))))))))",
      "((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x (min ((reverse fb:row.row.index) (var x))))))))",
      "((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x (sum ((reverse fb:row.row.index) (var x))))))))",
      "((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:type.object.type fb:type.row) (reverse (lambda x ((reverse fb:row.row.index) (and (fb:row.row.league fb:cell.usl_a_league) (var x))))))))",
      "((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "((reverse fb:cell.cell.date) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league))) (reverse (lambda x ((reverse fb:cell.cell.date) (var x))))))",
      "((reverse fb:cell.cell.date) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league))) (reverse (lambda x ((reverse fb:cell.cell.number) (var x))))))",
      "((reverse fb:cell.cell.date) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x ((reverse fb:row.row.index) (fb:row.row.year (var x)))))))",
      "((reverse fb:cell.cell.date) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x (avg ((reverse fb:cell.cell.number) (var x)))))))",
      "((reverse fb:cell.cell.date) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x (max ((reverse fb:cell.cell.date) (var x)))))))",
      "((reverse fb:cell.cell.date) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x (max ((reverse fb:cell.cell.number) (var x)))))))",
      "((reverse fb:cell.cell.date) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x (min ((reverse fb:cell.cell.date) (var x)))))))",
      "((reverse fb:cell.cell.date) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x (min ((reverse fb:cell.cell.number) (var x)))))))",
      "((reverse fb:cell.cell.date) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x (sum ((reverse fb:cell.cell.number) (var x)))))))",
      "((reverse fb:cell.cell.date) (fb:cell.cell.date (max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "((reverse fb:cell.cell.date) (fb:cell.cell.number (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)) (reverse (lambda x ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (var x))))))))",
      "((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (var x))))))))",
      "((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x ((reverse fb:row.row.index) (fb:row.row.next (var x))))))))",
      "((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x (avg ((reverse fb:row.row.index) (var x))))))))",
      "((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x (max ((reverse fb:row.row.index) (var x))))))))",
      "((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x (min ((reverse fb:row.row.index) (var x))))))))",
      "((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:row.row.league fb:cell.usl_a_league) (reverse (lambda x (sum ((reverse fb:row.row.index) (var x))))))))",
      "((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (argmax (number 1) (number 1) (fb:type.object.type fb:type.row) (reverse (lambda x ((reverse fb:row.row.index) (and (fb:row.row.league fb:cell.usl_a_league) (var x))))))))",
      "((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "((reverse fb:cell.cell.number) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league))) (reverse (lambda x ((reverse fb:cell.cell.date) (var x))))))",
      "((reverse fb:cell.cell.number) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league))) (reverse (lambda x ((reverse fb:cell.cell.number) (var x))))))",
      "((reverse fb:cell.cell.number) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x ((reverse fb:row.row.index) (fb:row.row.year (var x)))))))",
      "((reverse fb:cell.cell.number) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x (avg ((reverse fb:cell.cell.number) (var x)))))))",
      "((reverse fb:cell.cell.number) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x (max ((reverse fb:cell.cell.date) (var x)))))))",
      "((reverse fb:cell.cell.number) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x (max ((reverse fb:cell.cell.number) (var x)))))))",
      "((reverse fb:cell.cell.number) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x (min ((reverse fb:cell.cell.date) (var x)))))))",
      "((reverse fb:cell.cell.number) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x (min ((reverse fb:cell.cell.number) (var x)))))))",
      "((reverse fb:cell.cell.number) (argmax (number 1) (number 1) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)) (reverse (lambda x (sum ((reverse fb:cell.cell.number) (var x)))))))",
      "((reverse fb:cell.cell.number) (fb:cell.cell.date (max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "((reverse fb:cell.cell.number) (fb:cell.cell.number (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "(and (!= ((reverse fb:cell.cell.num2) (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division))) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (!= ((reverse fb:cell.cell.num2) fb:cell.3rd_usl_3rd)) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (!= ((reverse fb:cell.cell.number) (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division))) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (!= ((reverse fb:cell.cell.number) fb:cell.3rd_usl_3rd)) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (!= ((reverse fb:cell.cell.number) fb:cell.ussf_d_2_pro_league)) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (!= (count (fb:type.object.type fb:type.row))) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (!= (count (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division))) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and ((reverse fb:cell.cell.date) (!= fb:cell.3rd_usl_3rd)) (max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and ((reverse fb:cell.cell.date) (!= fb:cell.usl_a_league)) (max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and ((reverse fb:cell.cell.date) (!= fb:cell.usl_first_division)) (max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and ((reverse fb:cell.cell.date) (!= fb:cell.ussf_d_2_pro_league)) (max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:type.object.type fb:type.row))) (max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and ((reverse fb:cell.cell.number) (!= fb:cell.3rd_usl_3rd)) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and ((reverse fb:cell.cell.number) (!= fb:cell.usl_a_league)) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and ((reverse fb:cell.cell.number) (!= fb:cell.usl_first_division)) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and ((reverse fb:cell.cell.number) (!= fb:cell.ussf_d_2_pro_league)) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:type.object.type fb:type.row))) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (> ((reverse fb:cell.cell.num2) (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division))) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (> ((reverse fb:cell.cell.num2) fb:cell.3rd_usl_3rd)) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (> ((reverse fb:cell.cell.number) (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division))) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (> ((reverse fb:cell.cell.number) fb:cell.3rd_usl_3rd)) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (> ((reverse fb:cell.cell.number) fb:cell.ussf_d_2_pro_league)) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (> (count (fb:type.object.type fb:type.row))) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (> (count (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division))) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (>= ((reverse fb:cell.cell.num2) (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division))) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (>= ((reverse fb:cell.cell.num2) fb:cell.3rd_usl_3rd)) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (>= ((reverse fb:cell.cell.number) (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division))) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (>= ((reverse fb:cell.cell.number) fb:cell.3rd_usl_3rd)) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (>= ((reverse fb:cell.cell.number) fb:cell.ussf_d_2_pro_league)) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (>= (count (fb:type.object.type fb:type.row))) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(and (>= (count (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division))) (max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(argmax (number 1) (number 1) ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (reverse (lambda x ((reverse fb:cell.cell.date) (fb:cell.cell.date (var x))))))",
      "(argmax (number 1) (number 1) ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (reverse (lambda x ((reverse fb:cell.cell.number) (fb:cell.cell.date (var x))))))",
      "(argmax (number 1) (number 1) ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (reverse (lambda x ((reverse fb:cell.cell.date) (fb:cell.cell.number (var x))))))",
      "(argmax (number 1) (number 1) ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (reverse (lambda x ((reverse fb:cell.cell.number) (fb:cell.cell.number (var x))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.avg_attendance (!= fb:cell.3rd_usl_3rd)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.avg_attendance (!= fb:cell.usl_a_league)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.avg_attendance (!= fb:cell.usl_first_division)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.avg_attendance (!= fb:cell.ussf_d_2_pro_league)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.avg_attendance ((reverse fb:row.row.avg_attendance) (fb:type.object.type fb:type.row))) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.division (!= fb:cell.3rd_usl_3rd)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.division (!= fb:cell.usl_a_league)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.division (!= fb:cell.usl_first_division)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.division (!= fb:cell.ussf_d_2_pro_league)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.division ((reverse fb:row.row.division) (fb:type.object.type fb:type.row))) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.index ((reverse fb:row.row.index) (fb:type.object.type fb:type.row))) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league (!= fb:cell.3rd_usl_3rd)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league (!= fb:cell.usl_first_division)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league (!= fb:cell.ussf_d_2_pro_league)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league ((reverse fb:row.row.league) (fb:type.object.type fb:type.row))) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.open_cup (!= fb:cell.3rd_usl_3rd))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.open_cup (!= fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.open_cup (!= fb:cell.usl_first_division))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.open_cup (!= fb:cell.ussf_d_2_pro_league))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.open_cup ((reverse fb:row.row.open_cup) (fb:type.object.type fb:type.row)))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.playoffs (!= fb:cell.3rd_usl_3rd))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.playoffs (!= fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.playoffs (!= fb:cell.usl_first_division))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.playoffs (!= fb:cell.ussf_d_2_pro_league))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.playoffs ((reverse fb:row.row.playoffs) (fb:type.object.type fb:type.row)))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.regular_season (!= fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.regular_season (!= fb:cell.usl_first_division))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.regular_season (!= fb:cell.ussf_d_2_pro_league))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.regular_season ((reverse fb:row.row.regular_season) (fb:type.object.type fb:type.row)))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.year (!= fb:cell.3rd_usl_3rd))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.year (!= fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.year (!= fb:cell.usl_first_division))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.year (!= fb:cell.ussf_d_2_pro_league))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.year ((reverse fb:row.row.year) (fb:type.object.type fb:type.row)))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.avg_attendance ((reverse fb:row.row.avg_attendance) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.index ((reverse fb:row.row.index) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league ((reverse fb:row.row.league) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league (and ((reverse fb:row.row.league) (fb:row.row.league fb:cell.usl_a_league)) fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league (and ((reverse fb:row.row.league) (fb:type.object.type fb:type.row)) (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league (and (and ((reverse fb:row.row.league) (fb:type.object.type fb:type.row)) fb:cell.usl_a_league) fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.year ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "(max ((reverse fb:cell.cell.date) (and ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league))) ((reverse fb:row.row.year) (fb:type.object.type fb:type.row)))))",
      "(max ((reverse fb:cell.cell.date) (fb:cell.cell.date ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "(max ((reverse fb:cell.cell.date) (fb:cell.cell.number ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.avg_attendance (!= fb:cell.3rd_usl_3rd)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.avg_attendance (!= fb:cell.usl_a_league)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.avg_attendance (!= fb:cell.usl_first_division)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.avg_attendance (!= fb:cell.ussf_d_2_pro_league)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.avg_attendance ((reverse fb:row.row.avg_attendance) (fb:type.object.type fb:type.row))) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.division (!= fb:cell.3rd_usl_3rd)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.division (!= fb:cell.usl_a_league)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.division (!= fb:cell.usl_first_division)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.division (!= fb:cell.ussf_d_2_pro_league)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.division ((reverse fb:row.row.division) (fb:type.object.type fb:type.row))) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.index ((reverse fb:row.row.index) (fb:type.object.type fb:type.row))) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league (!= fb:cell.3rd_usl_3rd)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league (!= fb:cell.usl_first_division)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league (!= fb:cell.ussf_d_2_pro_league)) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league ((reverse fb:row.row.league) (fb:type.object.type fb:type.row))) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.open_cup (!= fb:cell.3rd_usl_3rd))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.open_cup (!= fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.open_cup (!= fb:cell.usl_first_division))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.open_cup (!= fb:cell.ussf_d_2_pro_league))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.open_cup ((reverse fb:row.row.open_cup) (fb:type.object.type fb:type.row)))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.playoffs (!= fb:cell.3rd_usl_3rd))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.playoffs (!= fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.playoffs (!= fb:cell.usl_first_division))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.playoffs (!= fb:cell.ussf_d_2_pro_league))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.playoffs ((reverse fb:row.row.playoffs) (fb:type.object.type fb:type.row)))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.regular_season (!= fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.regular_season (!= fb:cell.usl_first_division))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.regular_season (!= fb:cell.ussf_d_2_pro_league))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.regular_season ((reverse fb:row.row.regular_season) (fb:type.object.type fb:type.row)))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.year (!= fb:cell.3rd_usl_3rd))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.year (!= fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.year (!= fb:cell.usl_first_division))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.year (!= fb:cell.ussf_d_2_pro_league))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (and (fb:row.row.league fb:cell.usl_a_league) (fb:row.row.year ((reverse fb:row.row.year) (fb:type.object.type fb:type.row)))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.avg_attendance ((reverse fb:row.row.avg_attendance) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.index ((reverse fb:row.row.index) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league ((reverse fb:row.row.league) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league (and ((reverse fb:row.row.league) (fb:row.row.league fb:cell.usl_a_league)) fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league (and ((reverse fb:row.row.league) (fb:type.object.type fb:type.row)) (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league))))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league (and (and ((reverse fb:row.row.league) (fb:type.object.type fb:type.row)) fb:cell.usl_a_league) fb:cell.usl_a_league)))))",
      "(max ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.year ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "(max ((reverse fb:cell.cell.number) (and ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league))) ((reverse fb:row.row.year) (fb:type.object.type fb:type.row)))))",
      "(max ((reverse fb:cell.cell.number) (fb:cell.cell.date ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "(max ((reverse fb:cell.cell.number) (fb:cell.cell.number ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league (or fb:cell.3rd_usl_3rd fb:cell.usl_a_league)))))))",
      "(max (and (!= ((reverse fb:cell.cell.num2) (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division))) ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and (!= ((reverse fb:cell.cell.num2) fb:cell.3rd_usl_3rd)) ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and (!= ((reverse fb:cell.cell.number) (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division))) ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and (!= ((reverse fb:cell.cell.number) fb:cell.3rd_usl_3rd)) ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and (!= ((reverse fb:cell.cell.number) fb:cell.ussf_d_2_pro_league)) ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and (!= (count (fb:type.object.type fb:type.row))) ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and (!= (count (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division))) ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and ((reverse fb:cell.cell.date) (!= fb:cell.3rd_usl_3rd)) ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and ((reverse fb:cell.cell.date) (!= fb:cell.usl_a_league)) ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and ((reverse fb:cell.cell.date) (!= fb:cell.usl_first_division)) ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and ((reverse fb:cell.cell.date) (!= fb:cell.ussf_d_2_pro_league)) ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) ((reverse fb:cell.cell.date) ((reverse fb:row.row.year) (fb:type.object.type fb:type.row)))))",
      "(max (and ((reverse fb:cell.cell.number) (!= fb:cell.3rd_usl_3rd)) ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and ((reverse fb:cell.cell.number) (!= fb:cell.usl_a_league)) ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and ((reverse fb:cell.cell.number) (!= fb:cell.usl_first_division)) ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and ((reverse fb:cell.cell.number) (!= fb:cell.ussf_d_2_pro_league)) ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league)))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:type.object.type fb:type.row)))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (> ((reverse fb:cell.cell.num2) (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division)))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (> ((reverse fb:cell.cell.num2) fb:cell.3rd_usl_3rd))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (> ((reverse fb:cell.cell.number) (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division)))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (> ((reverse fb:cell.cell.number) fb:cell.3rd_usl_3rd))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (> ((reverse fb:cell.cell.number) fb:cell.ussf_d_2_pro_league))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (> (count (fb:type.object.type fb:type.row)))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (> (count (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division)))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (>= ((reverse fb:cell.cell.num2) (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division)))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (>= ((reverse fb:cell.cell.num2) fb:cell.3rd_usl_3rd))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (>= ((reverse fb:cell.cell.number) (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division)))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (>= ((reverse fb:cell.cell.number) fb:cell.3rd_usl_3rd))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (>= ((reverse fb:cell.cell.number) fb:cell.ussf_d_2_pro_league))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (>= (count (fb:type.object.type fb:type.row)))))",
      "(max (and ((reverse fb:cell.cell.number) ((reverse fb:row.row.year) (fb:row.row.league fb:cell.usl_a_league))) (>= (count (or fb:cell.3rd_usl_3rd fb:cell.usl_first_division)))))"
    ]
  ],
  [
    "in what city did piotr's last 1st place finish occur?",
    [
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st)))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position (fb:cell.cell.number (number 1))) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x ((reverse fb:row.row.index) (fb:row.row.next (var x)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x (avg ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x (max ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x (min ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x (sum ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:type.object.type fb:type.row) (reverse (lambda x ((reverse fb:row.row.index) (and (fb:row.row.position fb:cell.1st) (var x)))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.position (fb:cell.cell.number (number 1)))))))",
      "(argmax (number 1) (number 1) ((reverse fb:row.row.venue) (fb:row.row.position fb:cell.1st)) (reverse (lambda x ((reverse fb:row.row.index) (fb:row.row.venue (var x))))))",
      "((reverse fb:row.row.venue) ((reverse fb:row.row.next) (fb:row.row.index (- (max ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st))) (number 1)))))",
      "((reverse fb:row.row.venue) ((reverse fb:row.row.next) (fb:row.row.index (max (- ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st)) (number 1))))))",
      "((reverse fb:row.row.venue) (and (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x ((reverse fb:row.row.index) (var x))))) (fb:row.row.position fb:cell.1st)))",
      "((reverse fb:row.row.venue) (and (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st)))) (fb:row.row.position fb:cell.1st)))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.event ((reverse fb:row.row.event) (fb:row.row.index (number 1)))) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.index ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st))) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.notes ((reverse fb:row.row.notes) (fb:row.row.position fb:cell.1st))) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position ((reverse fb:row.row.position) (fb:row.row.position fb:cell.1st))) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position (and ((reverse fb:row.row.position) (fb:type.object.type fb:type.row)) fb:cell.1st)) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position (and (fb:cell.cell.number (number 1)) fb:cell.1st)) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position (fb:cell.cell.number ((reverse fb:cell.cell.number) fb:cell.1st))) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position (fb:cell.cell.number (<= (number 1)))) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position (fb:cell.cell.number (number 1))) (reverse (lambda x ((reverse fb:row.row.index) (fb:row.row.next (var x)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position (fb:cell.cell.number (number 1))) (reverse (lambda x (avg ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position (fb:cell.cell.number (number 1))) (reverse (lambda x (max ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position (fb:cell.cell.number (number 1))) (reverse (lambda x (min ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position (fb:cell.cell.number (number 1))) (reverse (lambda x (sum ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x ((reverse fb:row.row.index) (and (fb:row.row.position fb:cell.1st) (var x)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x ((reverse fb:row.row.index) (fb:row.row.index ((reverse fb:row.row.index) (var x))))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x ((reverse fb:row.row.index) (fb:row.row.notes ((reverse fb:row.row.notes) (var x))))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x ((reverse fb:row.row.index) (fb:row.row.venue ((reverse fb:row.row.venue) (var x))))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x (and (!= (number 1)) ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x (and ((reverse fb:row.row.index) (fb:type.object.type fb:type.row)) ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x (and ((reverse fb:row.row.index) (var x)) (> (number 1)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x (and ((reverse fb:row.row.index) (var x)) (>= (number 1)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.venue ((reverse fb:row.row.venue) (fb:row.row.position fb:cell.1st))) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:type.object.type fb:type.row) (reverse (lambda x ((reverse fb:row.row.index) (and (fb:row.row.position (fb:cell.cell.number (number 1))) (var x)))))))",
      "((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:type.object.type fb:type.row) (reverse (lambda x (and ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st)) ((reverse fb:row.row.index) (var x)))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index ((reverse fb:row.row.index) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index ((reverse fb:row.row.index) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st)))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (and (!= (number 1)) (max ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (and ((reverse fb:row.row.index) (fb:type.object.type fb:type.row)) (max ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (and (> (number 1)) (max ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (and (>= (number 1)) (max ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.event ((reverse fb:row.row.event) (fb:row.row.index (number 1))))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.index ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st)))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.notes ((reverse fb:row.row.notes) (fb:row.row.position fb:cell.1st)))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.position ((reverse fb:row.row.position) (fb:row.row.position fb:cell.1st)))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.position (and ((reverse fb:row.row.position) (fb:type.object.type fb:type.row)) fb:cell.1st))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.position (and (fb:cell.cell.number (number 1)) fb:cell.1st))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.position (fb:cell.cell.number ((reverse fb:cell.cell.number) fb:cell.1st)))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.position (fb:cell.cell.number (<= (number 1))))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.venue ((reverse fb:row.row.venue) (fb:row.row.position fb:cell.1st)))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max (and (!= (number 1)) ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max (and ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st)) ((reverse fb:row.row.index) (fb:type.object.type fb:type.row))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max (and ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st)) (> (number 1))))))",
      "((reverse fb:row.row.venue) (fb:row.row.index (max (and ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st)) (>= (number 1))))))",
      "((reverse fb:row.row.venue) (fb:row.row.notes ((reverse fb:row.row.notes) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))))",
      "((reverse fb:row.row.venue) (fb:row.row.notes ((reverse fb:row.row.notes) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st)))))))",
      "((reverse fb:row.row.venue) (fb:row.row.venue ((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))))",
      "((reverse fb:row.row.venue) (fb:row.row.venue ((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st)))))))",
      "(and (!= fb:cell.1st) ((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x ((reverse fb:row.row.index) (var x)))))))",
      "(and (!= fb:cell.1st) ((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st))))))",
      "(and ((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x ((reverse fb:row.row.index) (var x)))))) ((reverse fb:row.row.venue) (fb:type.object.type fb:type.row)))",
      "(and ((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st))))) ((reverse fb:row.row.venue) (fb:type.object.type fb:type.row)))",
      "(argmax (number 1) (number 1) ((reverse fb:row.row.venue) (fb:row.row.position (fb:cell.cell.number (number 1)))) (reverse (lambda x ((reverse fb:row.row.index) (fb:row.row.venue (var x))))))",
      "(argmax (number 1) (number 1) ((reverse fb:row.row.venue) (fb:row.row.position fb:cell.1st)) (reverse (lambda x (max ((reverse fb:row.row.index) (fb:row.row.venue (var x)))))))",
      "(argmax (number 1) (number 1) ((reverse fb:row.row.venue) (fb:type.object.type fb:type.row)) (reverse (lambda x ((reverse fb:row.row.index) (and (fb:row.row.position fb:cell.1st) (fb:row.row.venue (var x)))))))",
      "(fb:cell.cell.part ((reverse fb:cell.cell.part) ((reverse fb:row.row.venue) (argmax (number 1) (number 1) (fb:row.row.position fb:cell.1st) (reverse (lambda x ((reverse fb:row.row.index) (var x))))))))",
      "(fb:cell.cell.part ((reverse fb:cell.cell.part) ((reverse fb:row.row.venue) (fb:row.row.index (max ((reverse fb:row.row.index) (fb:row.row.position fb:cell.1st)))))))"
    ]
  ]
]
